name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        run: pnpm install

      - name: 🖼 Build icons
        run: pnpm run build:icons

      - name: 🔬 Lint
        run: pnpm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        run: pnpm install

      - name: 🖼 Build icons
        run: pnpm run build:icons

      - name: 🔎 Type check
        run: pnpm run --if-present typecheck

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download deps
        run: pnpm install

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 🖼 Build icons
        run: pnpm run build:icons

      - name: ⚡ Run vitest
        run: pnpm run test -- --coverage

  metrics:
    name: Metrics
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get metrics from previous commit
        id: old
        run: |
          git checkout HEAD^
          echo "eslint-ignore-count=$(cat other/metrics/eslint-ignore-count.txt) >> $GITHUB_OUTPUT"
          # echo "::set-output name=no-explicity-any-count::$(cat other/metrics/ignore-any-count.txt)"
          # echo "::set-output name=any-count::$(cat other/metrics/any-count.txt)"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Count new metrics
        id: new
        run: |
          eslint_ignore_count=$(grep -r "eslint-disable" . | wc -l)
          # no_explicit_any_count=$(grep -r "eslint-disable" . | wc -l)
          # any_count=$(grep -r "eslint-disable" . | wc -l)
          echo "eslint-ignore-count=$eslint_ignore_count" >> $GITHUB_OUTPUT
          # echo "::set-output name=no-explicity-any-count::$no_explicit_any_count"
          # echo "::set-output name=any-count::$any_count"
          echo $eslint_ignore_count > other/metrics/eslint-ignore-count.txt
          # echo $no_explicit_any_count > other/metrics/no-explicit-any-count.txt
          # echo $any_count > other/metrics/any-count.txt

      - name: Calculate percentage change
        run: |
          old=${{ steps.old.outputs.eslint-ignore-count }}
          new=${{ steps.new.outputs.eslint-ignore-count }}
          echo "old: ${old}"
          echo "new: ${new}"
          # change=$(echo "scale=2; ($new - $old) / $old * 100" | bc)
          # echo "Percentage change in eslint ignore comments: $change%"
          # old=${{ steps.old.outputs.no-explicity-any-count }}
          # new=${{ steps.new.outputs.no-explicity-any-count }}
          # change=$(echo "scale=2; ($new - $old) / $old * 100" | bc)
          # echo "Percentage change in no-explicit-any comments: $change%"
          # old=${{ steps.old.outputs.any-count }}
          # new=${{ steps.new.outputs.any-count }}
          # change=$(echo "scale=2; ($new - $old) / $old * 100" | bc)
          # echo "Percentage change in :any types: $change%"

  # playwright:
  #   name: 🎭 Playwright
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 60
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4
  #
  #     - name: 📦 Setup pnpm
  #       uses: pnpm/action-setup@v3
  #
  #     - name: 🏄 Copy test env vars
  #       run: cp .env.example .env
  #
  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #
  #     - name: 📥 Download deps
  #       run: pnpm install
  #
  #     - name: 📥 Install Playwright Browsers
  #       run: pnpm run test:e2e:install
  #
  #     - name: 🛠 Setup Database
  #       run: npx prisma migrate deploy
  #
  #     - name: 🏦 Cache Database
  #       id: db-cache
  #       uses: actions/cache@v4
  #       with:
  #         path: prisma/data.db
  #         key:
  #           db-cache-schema_${{ hashFiles('./prisma/schema.prisma')
  #           }}-migrations_${{ hashFiles('./prisma/migrations/*/migration.sql')
  #           }}
  #
  #     - name: 🌱 Seed Database
  #       if: steps.db-cache.outputs.cache-hit != 'true'
  #       run: npx prisma db seed
  #       env:
  #         MINIMAL_SEED: true
  #
  #     - name: 🏗 Build
  #       run: pnpm run build
  #
  #     - name: 🎭 Playwright tests
  #       run: pnpx playwright test
  #
  #     - name: 📊 Upload report
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  # deploy:
  #   name: 🚀 Deploy
  #   runs-on: ubuntu-22.04
  #   needs: [lint, typecheck, vitest]
  #   # only build/deploy branches on pushes
  #   if: ${{ github.event_name == 'push' }}
  #
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4
  #
  #     - name: 👀 Read app name
  #       uses: SebRollen/toml-action@v1.2.0
  #       id: app_name
  #       with:
  #         file: 'fly.toml'
  #         field: 'app'
  #
  #     # move Dockerfile to root
  #     - name: 🚚 Move Dockerfile
  #       run: |
  #         mv ./other/Dockerfile ./Dockerfile
  #         mv ./other/.dockerignore ./.dockerignore
  #
  #     - name: 🎈 Setup Fly
  #       uses: superfly/flyctl-actions/setup-flyctl@1.5
  #
  #     - name: 🚀 Deploy Staging
  #       if: ${{ github.ref == 'refs/heads/dev' }}
  #       run:
  #         flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
  #         --app ${{ steps.app_name.outputs.value }}-staging
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #
  #     - name: 🚀 Deploy Production
  #       if: ${{ github.ref == 'refs/heads/main' }}
  #       run:
  #         flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
  #         --build-secret SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
